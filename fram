#!/bin/bash
# Board FRAM - Board Farm Remote Access Management

set -e

PATH="$HOME/bin:/usr/bin:/bin"

BOARD=$USER
USER=$1

# Log access early
echo "$(date +'%F %T') $BOARD $USER $SSH_ORIGINAL_COMMAND" >> fram.log

function usage()
{
	cat <<END

Welcome to Board FRAM - The Board Farm Remote Access Manager

Valid commands are:

    help                           This usage information
    acc [on|off|status*]           Control board accessory switch
    console                        Access the board console (use "ssh -t")
    ls                             List the TFTP directory contents
    power [on|off|sample|status*]  Control board power
    reset                          Reset board
    rsync                          Upload files to TFTP directory (use rsync)
    status                         Show board status
    wake                           Wake board by key (NOT SUPPORTED on Ebisu)
    wol                            Wake board through Wake-on-LAN

Options marked with an asterisk are the default

END

	# Admin commands help
	test "$ADMIN" == "true" && cat <<END
Valid admin commands are:

    shell                   Launch a shell (use "ssh -t")

END

	# Show board-specific information, if available
	test -f "$BOARD.txt" && cat "$BOARD.txt"

	exit 0
}

# Load board-specific definitions, if available
test -f "$BOARD.cfg" && source "$BOARD.cfg"

# Admin commands must be enabled explicitly by setting ADMIN_USERS
if [ "$ADMIN_USERS" != "" ]; then
	ADMIN=$(eval "case $USER in $ADMIN_USERS) echo true ;; esac")
fi

# Handle help and welcome early, as they do not need locking
case "$SSH_ORIGINAL_COMMAND" in
	help)
		usage
		;;

	"")
		# Welcome banner
		if [ "$ADMIN" == "true" ]; then
			echo "Welcome master $USER, your wish is my command"
		else
			echo "Welcome $USER"
		fi
		exit 0
esac

# Admin commands
if [ "$ADMIN" == "true" ]; then
	case "$SSH_ORIGINAL_COMMAND" in
	shell)
		exec /bin/bash -l
		;;
	esac
fi

# FIXME board locking/reservation

# User commands
case "$SSH_ORIGINAL_COMMAND" in
	acc*)
		case "$SSH_ORIGINAL_COMMAND" in
		acc\ on|acc\ 1)
			"acc-$BOARD-on"
			;;

		acc\ off|acc\ 0)
			"acc-$BOARD-off"
			;;

		acc\ status|acc)
			"acc-$BOARD-status"
			;;
		esac
		;;

	console)
		"screen-$BOARD"
		;;

	ls)
		ls -lAh "/var/lib/tftpboot/$BOARD"
		;;

	power*)
		case "$SSH_ORIGINAL_COMMAND" in
		power\ on|power\ 1)
			"power-$BOARD-on"
			;;

		power\ off|power\ 0)
			"power-$BOARD-off"
			;;

		power\ sample)
			"power-$BOARD-sample"
			;;

		power\ status|power)
			"power-$BOARD-status"
			;;
		esac
		;;

	reset)
		"reset-$BOARD"
		;;

	rsync\ *)
		export SSH_ORIGINAL_COMMAND
		exec /usr/bin/rrsync -wo "/var/lib/tftpboot/$BOARD"
		;;

	status)
		# Show board status
		power=$("power-$BOARD-status")
		acc=$("acc-$BOARD-status")
		if [ "$power" == "1" ]; then
			power=on
		else
			power=off
		fi
		if [ "$acc" == "1" ]; then
			acc=on
		else
			acc=off
		fi
		echo power: $power / acc: $acc
		;;

	wake)
		echo Not supported on Ebisu
		exit 1
		"wake-$BOARD"
		;;

	wol)
		wakeonlan "$BOARD"
		;;

	*)
		echo "Unknown command $SSH_ORIGINAL_COMMAND"
		usage
		;;
esac
